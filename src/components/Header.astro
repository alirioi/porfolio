---
import { Image } from 'astro:assets';
import profileImg from '../assets/profile.webp';

const navItems = [
  {
    title: 'Proyectos',
    label: 'proyectos',
    url: '/#proyectos',
  },
  {
    title: 'Tecnologías',
    label: 'tecnologias',
    url: '/#tecnologias',
  },
  {
    title: 'Sobre mí',
    label: 'sobre-mi',
    url: '/#sobre-mi',
  },
  {
    title: 'Contacto',
    label: 'contacto',
    url: 'mailto:isealirio@gmail.com',
  },
];
---

<header
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2 px-3 md:px-6"
>
  <!-- <div
    id="profile-info"
    class="items-center gap-3 transition-opacity duration-300 opacity-0 hidden"
  >
    <Image
      src={profileImg}
      alt="Foto de perfil de Alirio"
      class="size-10"
      loading="eager"
    />
    <p class="flex flex-col">
      <span class="text-primary font-medium text-sm md:text-base">
        Alirio Isea
      </span>
      <span class="text-dark-50 text-xs font-light"> Desarrollador Web </span>
    </p>
  </div> -->
  <nav
    class="text-dark-50 flex px-3 justify-center items-center rounded-full text-sm font-medium"
  >
    {
      navItems.map((link) => (
        <a
          class="relative block p-2 transition hover:text-primary-300"
          href={link.url}
          aria-label={link.label}
        >
          {link.title}
        </a>
      ))
    }
  </nav>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const sections = document.querySelectorAll('section');
    const navItems = document.querySelectorAll('header nav a');

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute('aria-label') == entry.target.id) {
              item.classList.add('text-primary-300');
            } else {
              item.classList.remove('text-primary-300');
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: '0px',
      threshold: 0.3,
    });

    sections.forEach((section) => {
      observer.observe(section);
    });

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === 'hidden') {
        observer.disconnect();
      } else {
        sections.forEach((section) => {
          observer.observe(section);
        });
      }
    };
  });
</script>

<style>
  nav {
    animation: nav-shadow 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
    background-color: #111111e4;
  }

  @keyframes nav-shadow {
    0% {
      background-color: #11111100;
    }
    to {
      box-shadow:
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -4px rgba(0, 0, 0, 0.1),
        0 0 0 1px rgba(255, 255, 255, 0.1);
      -webkit-backdrop-filter: blur(8px);
      backdrop-filter: blur(8px);
    }
  }
</style>
